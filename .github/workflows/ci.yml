name: CI
on:
  push:
env:
  JAVA_VERSION: 11
  JAVA_DISTRIBUTION: temurin
  GRADLE_VERSION: 7.2
  GRADLE_PARAMS: -Prelease.scope=patch --stacktrace
  RELEASE_TASK: ${{ github.ref == 'refs/heads/master' && 'final' || 'devSnapshot' }}
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # [ubuntu-latest, macos-latest, windows-latest]
        # TODO: mac is disabled as it takes 10/20mins to install docker
        # TODO: windows has lots of file not found when trying to run mongo
        # ...(maybe exec isn't running as the same user? no idea look into it later)
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Docker
        uses: docker-practice/actions-setup-docker@master
        if: matrix.os == 'macos-latest'
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Test
        uses: gradle/gradle-build-action@v1
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          arguments: check ${{ env.GRADLE_PARAMS }}
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: results (${{ matrix.os }})
          path: "*/build/test-results/test/*.xml"
          reporter: java-junit
  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
      - name: Publish
        uses: gradle/gradle-build-action@v1
        env:
          GRGIT_USER: sbnarra
          GRGIT_PASS: ${{ github.token }}
          GITHUB_USERNAME: sbnarra
          GITHUB_TOKEN: ${{ github.token }}
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          arguments: ${{ env.RELEASE_TASK }} release ${{ env.GRADLE_PARAMS }}
